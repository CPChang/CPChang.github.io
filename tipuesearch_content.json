{"pages":[{"text":"Journal Papers 2014 K.-Y. Yang, C.-P. Chang , T.-Y. Wu, W.-S. Wang, Y.-H. Lin, R.-B. Wu, \"Modeling and fast eye-diagram estimation of ringing effects on branch line,\" IEEE Trans. Compon. Packag. Manuf. Technol. , vol.4, no.4, pp.641-647, April 2014 IEEE Conference Papers 2014 C.-P. Chang , M.-K. Kang, T.-Y. Huang, K.-B. Wu, R.-B. Wu, \"A Novel Noise Mitigation Design for TSV-to-Device Coupling Using Power Distribution Network,\" in Electrical Performance of Electronic Packaging and Systems (EPEPS), 2014 IEEE 23rd Conference , Oct. 2014. W.-C. Chen, C.-P. Chang , M.-K. Kang, T.-Y. Huang, K.-B. Wu, R.-B. Wu, \"Artificial Neural Network Modeling for Extrinsic Capacitance of FinFET,\" in Electrical Performance of Electronic Packaging and Systems (EPEPS), 2014 IEEE 23rd Conference , Oct. 2014. 2013 K.-B. Wu, C.-B. Chang , M.-C. Wu, R.-B. Wu, \"Simplified Array Model of Vertical Interconnect in Through-Silicon-Via Application,\" in 2013 Asia-Pacific Radio Science Conference (AP-RASC) , Sep. 2013. C.-B. Chang , T.-Y. Huang, M.-C. Wu, R.-B. Wu, \"Inductance Modeling of TSV for time domain simulation,\" in 2013 Asia-Pacific Radio Science Conference (AP-RASC) , Sep. 2013. 2012 Y.-C. Tseng, C.-B. Chang , C.-K. Tang, C.-H. Cheng, Y.-C. Lu, K.-Y. Lin, T.-L. Wu, and R.-B. Wu, \"Design considerations for radio frequency 3DICs,\" in 2012 IEEE Electrical Design of Advanced Packaging and Systems Symposium (EDAPS) , 2012, pp. 197–200. IEEE Book C.-B. Chang , [A Detailed Explanation on Basic Electrical Science] , GreatBooks Co. Ltd., Aug. 2012, ISBN: 978-986-7015-86-0. (in Chinese) Link-zh","title":"Publication","tags":"pages","loc":"http://cpchang.github.io/pages/publication.html"},{"text":"Files PDF Research Interests Electrical Engineering Signal Integrity Power Integrity Electromagnetic Compatibility Optimization Linear Programming Nonlinear Programming Convex Optimization Computational Electromagnetic Finite Element Method (FEM) Boundary Element Method (BEM) Meshfree Method Education National Taiwan University (NTU) , Taipei, Taiwan Sep.2006 – Jun.2010, Bachelor of Science in Electrical Engineering Sep.2011 – Jun.2013, Master of Science in Communication Engineering Experience Research Assistant Period Jul.2013–Aug.2014 Company National Science Council(NSC) National Taiwan University(NTU) 1 Project 3D Transistors and 3D Interconnects for Advanced VLSI System Intern Period Jul.2012 – Sep.2012 Company Taiwan Semiconductor Manufacturing Company(TSMC) Research Assistant Period Jul.2011 – Aug.2013 Company National Taiwan University(NTU) 5 Projects 3D Transistors and 3D Interconnects for Advanced VLSI System Electrical Modeling and Design for TSV array in Wide IO Modeling, Simulation, and Design for TSV Interconnects & Substrate Noise Coupling in 3D IC Stacking Application Signal Integrity Analysis and Design in 3D IC Packaging Modeling of power-ground planes and optimization of decoupling capacitors Software Skills Simulation Tools ANSYS® High Frequency Structural Simulator HFSS ANSYS® Q3D Extractor Q3D Angilent Advanced Design System ADS Language Mathematica®, Matlab®, Python Open Message Passing Library Open MPI HTML5/CSS3/javascript VBScript","title":"Resume","tags":"pages","loc":"http://cpchang.github.io/pages/resume.html"},{"text":"Abstract This integrated project covers many aspects including material , device , fabrication , circuit design , and modeling . The goal is to develop technologies for 3D IC stacking and high mobility 3D transistors for advanced CMOS technology nodes at 15/14 nm and beyond, and to solve the challenges in the above mentioned areas. Participants Principal Investigator Ruey-Beei Wu, IEEE Fellow Co-Principal Investigator Chee-Wee Liu Miin-Jang Chen Ming Han, Liao Yi-Chang Lu Tzong-Lin Wu","title":"3D Transistors and 3D Interconnects for Advanced VLSI System","tags":"project","loc":"http://cpchang.github.io/project/3d-transistors-and-3d-interconnects-for-advanced-vlsi-system.html"},{"text":"Why so serious? Somebody gave me a interesting puzzle game, Loop of Zen . After 10 hours of furstration, I simply decided to spend about an hour to develop a Matlab code to solve this game. Steps Pattern recoginition to identify the elements. Solve this problem by recursion or ILP . This code is uploaded to github . Pattern Recognition Solving Puzzles After have the right element pattern, we can solve this problem either by conventional recursion or Integer Linear Programming (ILP). The later solution had become a great practice of my recent lecture taken in Coursera. By the way, Linear and Integer Programming , https://www.coursera.org/course/linearprogramming was a great lecture given by professor Sriram Sankaranarayanan in University of Colorado Boulder. Method 1 - Recursion This might be the simplest, or orthodox, way to solve this problem. Fill all element with only 1 possible choice(singleton) Recurse over all possible choice for each element. Sample Code In file solveRecursion.m , it contains a recursing function called recursing , which will called itself recursively to solve this problem. This code is inspired by Sudoku Example of Matlab pages. Variables: E: element type R: rotation candidate s: first singleton e: element with no candidate(impossible puzzle) function [E,R,e] = recursing ( E,R ) [ Rc , s , e , J1 , J2 ] = candidate ( E , R ); if ~ isempty ( e ) return ; % Return for impossible puzzles. else while ~ isempty ( s ) % fill in singleton R ( s ) = Rc { s }; [ Rc , s , e , J1 , J2 ] = candidate ( E , R ); if ~ isempty ( e ) % Return for impossible puzzles. return ; end if showPuzzle showThisPuzzle ( E , R , J1 , J2 ); pause ( 0.01 ); end end end if any ( R (:) == 0 ) T = R ; % Temperary holder of R, since R is going into recursing z = find ( R (:) == 0 , 1 ); % The first unfilled cell. for ii = 1 : length ( Rc { z }) % Iterate over candidates. r = Rc { z }( ii ); R = T ; R ( z ) = r ; % Insert a tentative value. [ E , R ] = recursing ( E , R , showPuzzle ); % Recursive call. if all ( R (:) > 0 ) % Found a solution. return ; end end end end Method 2 - Integer Linear Programming A faster (and fancier) way to deal with this is to use ILP. The rescursive solution is actually the Branch and Bound in solving ILP, which branch all variables and create leaves. However, the ILP can actually solved faster by using cutting-plane method . $$x&#94;2+bx+c=\\infty$$ if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","title":"Loop of Zen - Why so Serious","tags":"project","loc":"http://cpchang.github.io/project/loop-of-zen-why-so-serious.html"},{"text":"GLPK Wiki Project Website GLPK (GNU Linear Programming Kit) is a set of routines written in the ANSI C programming language and organized in the form of a callable library. It is intended for solving linear programming (LP), mixed integer programming (MIP), and other related problems. GLPK MEX GLPK MEX is a Matlab MEX Interface for the GLPK library, developed by Nicolo' Giorgetti. Install Downloads Download the compiled glpk and interface from sourceforge glpkmex-2.11-src.zip So far, this version of glpkmex uses GLPK 4.40 to build its mex file. Installation Simply unzip it and add the folder to matlab path. Usage Very similar to matlab linear program function, linprog . [ xopt , fopt , status , extra ]= glpk ( c , a , b , lb , ub , ctype , vartype , sense , param )","title":"GLPK for Matlab in Windows","tags":"misc","loc":"http://cpchang.github.io/misc/glpk-for-matlab-in-windows.html"},{"text":"An h1 header An h2 header An h3 header An h4 header An h5 header An h6 header Ordinary Text, a website section heading in the current doc Here's a footnote [&#94;1]. [&#94;1]: Footnote text goes here. Emphasized Text <em> Strong Text <strong> Escape Character &nbsp; for blank &lt; for &lt; &amp; for &amp; \\` for ``` Quotes Block quotes are written like so. Double Quote are written like so Lists Add &nbsp; to properly end a list, or use extension 'markdown.extensions.sane_lists' to have continuouly written li and ul. li - 1st item li - 2nd item li - 3rd item (insert &nbsp; next line to end the list) ul - 1st item ul - 2nd item ul - 3rd item (insert &nbsp; next line to end the list) li with p - 1st item <li><p> li with p - 2nd item li with p - 3rd item (insert &nbsp; next line to end the list) ul with p - 1st item <ul><li><p> ul with p - 2nd item ul with p - 3rd item (insert &nbsp; next line to end the list) ul - 1st item li - 1st item li - 2nd item li - 3rd item ul - 2nd item ul - 3rd item (insert &nbsp; next line to end the list) li - 1st item ul - 1st item ul - 2nd item ul - 3rd item li - Code ( multi-line not supported in python markdown ) matlab % Code Block for matlab inside the li (not supported by python markdown) for ii = 1:2:10 plot(x,y,'linewidth',4); end li - Quote ( multi-line not supported in python markdown ) Quote inside list Quote inside list Code % Code Block for matlab for ii = 1 : 2 : 10 plot ( x , y , 'linewidth' , 4 ); end Since python code use # as comment, it may confused when using extract-toc (it will treat it as H1 header). Enabling 'markdown.extensions.fenced_code' will prevent this problem. # Code Block for python import time for i in range ( 10 ): # (but not *too* quick) time . sleep ( 0.5 ) print i Table Table is not supported in Markdown Core , but can use markdown.extensions.tables . Tables Are Cool col 3 is right-aligned $1600 col 2 is centered $12 zebra stripes are neat $1 However, it's sad that markdown table can't use with the extension markdown.attr_list . Definition list apples Good for making applesauce. 2nd definition oranges Citrus! tomatoes There's no \"e\" in tomatoe. Math Support MathJax is an open source JavaScript display engine for mathematics that works in all browsers. No more setup for readers. No more browser plugins. pelican plugin Github Page : render_math python markdown extension Github Page : python-markdown-mathjax Inline Equation $ax&#94;2+bx_2+c_n=\\infty$ produce \\(ax&#94;2+bx_2+c_n=\\infty\\) Displayed Equation $$ax&#94;2+bx_2+c_n=\\infty$$ produce $$ax&#94;2+bx_2+c_n=\\infty$$ Latex Macro use \\label{eq_name} to label the equation, and $\\ref{eq_name}$ to refer to that equation \\begin{equation} \\label{quadratic} ax&#94;2+bx_2+c_n \\end{equation} produce \\begin{equation} \\label{quadratic} ax&#94;2+bx_2+c_n=\\infty \\end{equation} The reference is $\\eqref{quadratic}$ which produces \\(\\eqref{quadratic}\\) . latex reference Mathjax reference if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","title":"Markdown Style Test","tags":"misc","loc":"http://cpchang.github.io/misc/markdown-style-test.html"}]}